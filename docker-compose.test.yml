version: "3.6"

services:
  db:
    image: mariadb
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /secret/password
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/password:/secret/password
      #disabling the following mount points, in order to MariaDB container with non-persistent writes
      #- ./mysql/conf.d/my-noencrypt.cnf:/etc/mysql/conf.d/my.cnf
      #- ./mysql/data:/var/lib/mysql
      #- ./mysql/conf.d:/etc/mysql/conf.d
      #- ./mysql/key:/key

  api_sails:
    image: skipdaddy/install-ab:developer_v2
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "1337:1337"
      - "9229:9229"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - ./app:/app
      - ./config/local.js:/app/config/local.js
      - ./data:/app/data
      - ./developer/app_builder:/app/node_modules/app_builder
      - ./developer/appdev-core:/app/node_modules/appdev-core
      - ./developer/appdev-opsportal:/app/node_modules/appdev-opsportal
    command: ["node", "--inspect", "--max-old-space-size=2048", "--stack-size=2048", "app_waitForMySql.js"]

  redis:
    image: redis
    volumes:
      - ./redis/data:/data
    command: redis-server --appendonly yes

  notification_email:
    image: node
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - ./developer/notification_email:/app
      - ./config/local.js:/app/config/local.js
    depends_on:
      - redis
    working_dir: /app
    command: [ "node", "app.js" ]

  process_manager:
    image: node
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - ./developer/process_manager:/app
      - ./config/local.js:/app/config/local.js
    depends_on:
      - redis
    working_dir: /app
    command: [ "node", "app.js" ]
